name: Deploy

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      repository:
        required: true
        type: string
    secrets:
      CLONE_KEY:
        required: true
      SSH_CONFIG:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      GPG_KEY:
        required: true

jobs:
  deploy:
    runs-on: self-hosted
    env:
      TARGET: ''
    steps:
    - name: Clean up
      run: |
          rm -rf $GITHUB_WORKSPACE
          mkdir -p $GITHUB_WORKSPACE
    - name: Setup SSH access
      run: |
        mkdir -p ~/.ssh
        chmod 0700 ~/.ssh
        rm -rf ~/.ssh/known_hosts
        ssh-keyscan fcio.net >> ~/.ssh/known_hosts
        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
        echo "${{ secrets.SSH_CONFIG }}" > ~/.ssh/config
        chmod 0700 ~/.ssh/config
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/identity
        echo "${{ secrets.CLONE_KEY }}" > ~/.ssh/id_rsa
    - name: Checkout github.com:risclog-solution/${{ inputs.repository }}.git
      run: |
        cd $GITHUB_WORKSPACE
        git config --global user.email "info@risclog.de"
        git config --global user.name "risclog"
        # git config --global core.sshCommand "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -F /dev/null"
        alias ssh="ssh -F ~/.ssh/config"
        git clone --verbose git@github.com:risclog-solution/${{ inputs.repository }}.git .
    - name: Update branch ${{ inputs.target }}
      run: |
        cd $GITHUB_WORKSPACE
        git checkout ${{ inputs.target }}
        source="master" && [[ ${{ inputs.target }} == "production" ]]  && source="staging"
        git merge origin/$source
        git push
    - name: Setup GPG
      run: |
        echo "${{ secrets.GPG_KEY }}" > ~/.private.key
        gpg --import ~/.private.key
        rm ~/.private.key
    - name: Deploy to ${{ inputs.target }}
      run: |
        ./batou deploy ${{ inputs.target }}
