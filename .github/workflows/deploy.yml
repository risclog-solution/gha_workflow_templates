# XXX: This needs a .ssh folder in the root directory:
#    sudo ln -s /run/github-runner/kravagtest50/.ssh /
#    sudo chown github-runner:github-runner /.ssh

name: Deploy

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      repository:
        required: true
        type: string
    secrets:
      CLONE_KEY:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      GPG_KEY:
        required: true

jobs:
  deploy:
    runs-on: self-hosted
    env:
      TARGET: ''
    steps:
    - name: Clean up
      run: |
          rm -rf $GITHUB_WORKSPACE
          mkdir -p $GITHUB_WORKSPACE
    - name: Setup SSH access - Step 1
      run: |
        mkdir -p ~/.ssh
        chmod 0700 ~/.ssh
        rm -rf ~/.ssh/known_hosts
    - name: Setup SSH access - Step 2
      run: |
        tee ~/.ssh/config << END
        ForwardAgent yes
        ServerAliveInterval 15
        ServerAliveCountMax 3

        Host flyingcircus-jump-host
            HostName dev.risclog.net
            IdentityFile ~/.ssh/identity
            User sweh

        Host *.fcio.net
            User sweh
            IdentityFile ~/.ssh/identity
            ProxyCommand ssh flyingcircus-jump-host nc -w 120 %h %p

        Host kravag*
            User sweh
            IdentityFile ~/.ssh/identity
            ProxyCommand ssh flyingcircus-jump-host nc -w 120 %h %p

        Host *
            StrictHostKeyChecking no
        END
    - name: Setup SSH access - Step 4
      run: |
        chmod 0700 ~/.ssh/config
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/identity
        echo "${{ secrets.CLONE_KEY }}" > ~/.ssh/id_rsa
    - name: Checkout github.com:risclog-solution/${{ inputs.repository }}.git
      run: |
        cd $GITHUB_WORKSPACE
        git config --global user.email "info@risclog.de"
        git config --global user.name "risclog"
        git config --global core.sshCommand "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -F /dev/null"
        git clone --verbose git@github.com:risclog-solution/${{ inputs.repository }}.git .
    - name: Update branch ${{ inputs.target }}
      run: |
        cd $GITHUB_WORKSPACE
        git checkout ${{ inputs.target }}
        source="master" && [[ ${{ inputs.target }} == "production" ]]  && source="staging"
        git merge origin/$source
        git push
    - name: Setup GPG
      run: |
        echo "${{ secrets.GPG_KEY }}" > ~/.private.key
        gpg --import ~/.private.key
        rm ~/.private.key
    - name: Deploy to ${{ inputs.target }}
      run: |
        BUILD_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
        curl -H 'Content-Type: application/json' -d '{"text": "${{ inputs.target }} deployment started üö¢\n'${BUILD_URL}'"}' https://chat.risclog.com/webhook/745c0604-6456-4eba-97e5-df9a36c7ae23
        ./batou deploy ${{ inputs.target }}
    - name: Report deployment failure
      if: ${{ failure() }}
      run: |
        BUILD_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
        curl -H 'Content-Type: application/json' -d '{"text": "${{ inputs.target }} deployment FAILED ‚ö†Ô∏è\n'${BUILD_URL}'"}' https://chat.risclog.com/webhook/745c0604-6456-4eba-97e5-df9a36c7ae23
