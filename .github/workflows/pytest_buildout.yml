name: Test

on:
  workflow_call:
    inputs:
      versions:
        default: >-
            ["3.9",]
        required: false
        type: string
      timeout_minutes:
        default: 30
        required: false
        type: number
      test_command:
        default: "bin/py.test"
        required: false
        type: string
      cache_hashfile:
        default: ""
        required: false
        type: string
      additional_installs:
        default: ""
        required: false
        type: string
      buildout_file:
        default: "buildout.cfg"
        required: false
        type: string
      debug_before_buildout:
        default: false
        required: false
        type: boolean
      debug_after_buildout:
        default: false
        required: false
        type: boolean

env:
  FORCE_COLOR: "1"  # Make tools pretty.
  PYTHONUNBUFFERED: 1

jobs:
  test:
    runs-on: ubuntu-20.04
    timeout-minutes: ${{ inputs.timeout_minutes }}
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: P0sTGrE5*Pa55W0rt!
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
        volumes:
          - /home/runner:/home/runner
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{fromJson(inputs.versions)}}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: MatteoH2O1999/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-build: info
        cache-build: true
    - name: Setup PostgreSQL environment
      run: |
        echo "localhost:5432:*:postgres:P0sTGrE5*Pa55W0rt!" > ~/.pgpass
        echo "localhost:5432:*:runner:R4nneR*Pa55W0rt!" >> ~/.pgpass
        chmod 0600 ~/.pgpass
        createuser -h localhost -U postgres --login runner --createdb --superuser
        psql -h localhost -U postgres -d postgres -c "ALTER ROLE \"runner\" WITH ENCRYPTED PASSWORD 'R4nneR*Pa55W0rt!' "
        createuser -h localhost -U postgres --login claimx
        createuser -h localhost -U postgres --login clx
        createuser -h localhost -U postgres --login clx_readonly
        createuser -h localhost -U postgres --login clxdmci
        createuser -h localhost -U postgres --login mp
        createuser -h localhost -U postgres --login brokeruser
        createuser -h localhost -U postgres --login backup
    - name: Add claimx directories
      run: |
        sudo mkdir -p /u01/app/claimx/log/
        sudo mkdir -p /u01/app/claimx/job/
        sudo mkdir -p /u01/app/claimx/temp/
        sudo mkdir -p /u01/app/claimx/import/importfiles/wsgi/
        sudo chmod -R 777 /u01
    - name: Add MCI directories
      run: |
        sudo mkdir -p /u01/app/claimxmci/
        sudo chmod -R 777 /u01
    - name: Install needed software
      run: |
        sudo apt-get update
        sudo apt-get -yqq install wkhtmltopdf qpdf ghostscript fonts-freefont-ttf poppler-utils libpq-dev libxml2-dev libxslt-dev python2-dev
    - name: Configure ImageMagick properly
      run: |
          cat > policy.xml <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <policymap>
            <policy domain="coder" rights="read|write" pattern="PDF,PS" />
          </policymap>

          EOF
          sudo mv policy.xml /etc/ImageMagick-6/policy.xml
    - name: Cached eggs
      uses: actions/cache@v3
      if: ${{ inputs.cache_hashfile }}
      with:
        path: ~/.eggs
        key: ${{ runner.os }}-tests-eggs-v1-${{ hashFiles(inputs.cache_hashfile) }}
        restore-keys: |
          ${{ runner.os }}-tests-eggs-v1-
    - name: Cached sdists
      uses: actions/cache@v3
      if: ${{ inputs.cache_hashfile }}
      with:
        path: ~/.download-cache
        key: ${{ runner.os }}-tests-download-cache-v1-${{ hashFiles(inputs.cache_hashfile) }}
        restore-keys: |
          ${{ runner.os }}-tests-download-cache-v1-
    - name: Configure buildout for caching
      if: ${{ inputs.cache_hashfile }}
      run: |
        mkdir ~/.buildout
        cat > ~/.buildout/default.cfg <<EOF
        [buildout]
        eggs-directory = ~/.eggs
        download-cache = ~/.download-cache
        abi-tag-eggs = true

        EOF
    - name: Start tmux session if debugging before buildout is enabled
      uses: lhotari/action-upterm@v1
      if: ${{ inputs.debug_before_buildout }}
      with:
        # limit ssh access to the user who triggered the workflow
        limit-access-to-actor: true
    - name: Install dependencies
      run: |
        python${{ matrix.python-version }} -m pip install --upgrade pip
        pip install zc.buildout==2.13.8
        ${{ inputs.additional_installs }}
        cd $GITHUB_WORKSPACE && buildout -c ${{ inputs.buildout_file }}
    - name: Start tmux session if debugging after buildout is enabled
      uses: lhotari/action-upterm@v1
      if: ${{ inputs.debug_after_buildout }}
      with:
        # limit ssh access to the user who triggered the workflow
        limit-access-to-actor: true
    - name: Test with pytest
      id: tests
      uses: zippyvision/xvfb-action@0675b29197c0fb2b557511aaa557be29d258cdf7
      with:
          run: ${{ inputs.test_command }} --junit-xml pytest.xml
      env:
        CI_TEST_RUN: 1
        POSTGRES_HOST: localhost
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: P0sTGrE5*Pa55W0rt!
        DISPLAY: :0
    - name: Upload coverage RAW data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-${{ matrix.python-version }}
        path: ".coverage*"
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.python-version }}
        path: pytest.xml
    - name: Upload Test Artifacts
      if: ${{ failure() && steps.tests.conclusion == 'failure' }}
      uses: actions/upload-artifact@v4
      with:
        name: test-failures-${{ matrix.python-version }}
        path: |
          /tmp/source_*.html
          /tmp/screenshot_*.png
          /tmp/selenium_browser_log_*.txt
